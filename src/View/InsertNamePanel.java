/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.event.MouseInputListener;
import utils.Config;

import Controller.GameController;
import Controller.*;
import utils.ImportWizard;
/**
 *
 * @author lorenzo
 */
public class InsertNamePanel extends javax.swing.JPanel implements MouseInputListener{

    /**
     * Creates new form InsertNamePanel
     */
     
    
    private BufferedImage mainBackground[];
    private Rectangle2D.Double[] rect;
    private Clip[] clip;
    private int backgroundSelector = 0;
    private boolean soundMove = true ;
    
    public InsertNamePanel() {
        addMouseListener(this);
        addMouseMotionListener(this);
        this.clip = new Clip[3];
        this.rect = new Rectangle2D.Double[2];
        this.rect[0] = new Rectangle2D.Double();
        this.rect[1] = new Rectangle2D.Double();
        this.rect[0].setRect(278, 243, 190, 60);
        this.rect[1].setRect(40, 243, 190, 60);
        initComponents();
        importMedia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PlayerNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(500, 326));

        PlayerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerNameTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Player name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(PlayerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(PlayerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(185, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void PlayerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlayerNameTextFieldActionPerformed


 public void paintComponent(Graphics g){
     Graphics2D g2d = (Graphics2D) g;
     g2d.drawImage(this.mainBackground[backgroundSelector], 0, 0, null);
     //g2d.draw(this.rect[0]);
     //g2d.draw(this.rect[1]);
 }//EndPaintComponent.
 
 private void importMedia(){
        this.mainBackground = new BufferedImage[3];
        for (int i=0;i<3;i++)
                this.mainBackground[i] =  (BufferedImage)ImportWizard.getInstance().importNamePanelMedia()[i];
        this.clip[0] = (Clip)ImportWizard.getInstance().importNamePanelMedia()[3];
        this.clip[1] = (Clip)ImportWizard.getInstance().importNamePanelMedia()[4];
        this.clip[2] = (Clip)ImportWizard.getInstance().importNamePanelMedia()[5];
        
    }//EndIMportMedia.
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PlayerNameTextField;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
       
    }//EndMouseClicked.

    @Override
    public void mousePressed(MouseEvent e) {
        Rectangle2D.Double mouseRect = new Rectangle2D.Double();
        mouseRect.setRect(e.getX(), e.getY(), 5, 5);
        if(this.rect[1].intersects(mouseRect)){
            if (!this.PlayerNameTextField.getText().equals("")){
                this.clip[2].setMicrosecondPosition(0);
                this.clip[2].start();
                MainGui.getInstance().stopMenuClip();
                Controller.getInstance().startGame(this.PlayerNameTextField.getText());
                View.getInstance().closeInsertPlayerWindow();
                System.out.println("Player name :" + this.PlayerNameTextField.getText());
            }else
                System.out.println("Player name cannot be blank");
        }//EndIf.
        
        if(this.rect[0].intersects(mouseRect)){
            this.clip[2].setMicrosecondPosition(0);
            this.clip[2].start();
            View.getInstance().closeInsertPlayerWindow();
            Controller.getInstance().openMainGui();
        }//EndIf.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
    
    }

    @Override
    public void mouseDragged(MouseEvent e) {
       
    }

    @Override
    public void mouseMoved(MouseEvent e) {
       Rectangle2D.Double mouseRect = new Rectangle2D.Double();
        mouseRect.setRect(e.getX(), e.getY(), 5, 5);
        //System.out.println ("X: " +e.getX()+ " Y: "+e.getY()); 
        
       if (!this.clip[0].isRunning())
            this.clip[0].setMicrosecondPosition(0);
       if (!this.clip[1].isRunning())
            this.clip[1].setMicrosecondPosition(0);
        
        if (this.rect[0].intersects(mouseRect)){
            
            this.backgroundSelector = 2;
            
            if (this.soundMove){
                //this.clip[0].setMicrosecondPosition(0);
                this.clip[0].start();
                this.soundMove = false;
            }//EndIf.
        }//EndIf. 
        else if (this.rect[1].intersects(mouseRect)){
            this.backgroundSelector = 1;
            
            if (this.soundMove){
                //this.clip[1].setMicrosecondPosition(0);
                this.clip[1].start();
                this.soundMove = false;
            }//EndIf.
            
        }//EndIf.
        else{ 
            this.backgroundSelector = 0;
            this.soundMove = true;
        }//EndElse.
        
        repaint();
    }
}//EndInsertNamePanel.
